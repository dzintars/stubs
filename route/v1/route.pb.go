// Code generated by protoc-gen-go. DO NOT EDIT.
// source: route/v1/route.proto

package v1 // import "github.com/oswee/stubs/route/v1"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreateRouteRequest struct {
	Route                *Route   `protobuf:"bytes,1,opt,name=route,proto3" json:"route,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRouteRequest) Reset()         { *m = CreateRouteRequest{} }
func (m *CreateRouteRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRouteRequest) ProtoMessage()    {}
func (*CreateRouteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_route_d515e77e8e526776, []int{0}
}
func (m *CreateRouteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRouteRequest.Unmarshal(m, b)
}
func (m *CreateRouteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRouteRequest.Marshal(b, m, deterministic)
}
func (dst *CreateRouteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRouteRequest.Merge(dst, src)
}
func (m *CreateRouteRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRouteRequest.Size(m)
}
func (m *CreateRouteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRouteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRouteRequest proto.InternalMessageInfo

func (m *CreateRouteRequest) GetRoute() *Route {
	if m != nil {
		return m.Route
	}
	return nil
}

type ListRoutesRequest struct {
	StakeholderId        int64    `protobuf:"varint,1,opt,name=stakeholder_id,json=stakeholderId,proto3" json:"stakeholder_id,omitempty"`
	PageNumber           int32    `protobuf:"varint,2,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	ResultPerPage        int32    `protobuf:"varint,3,opt,name=result_per_page,json=resultPerPage,proto3" json:"result_per_page,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRoutesRequest) Reset()         { *m = ListRoutesRequest{} }
func (m *ListRoutesRequest) String() string { return proto.CompactTextString(m) }
func (*ListRoutesRequest) ProtoMessage()    {}
func (*ListRoutesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_route_d515e77e8e526776, []int{1}
}
func (m *ListRoutesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRoutesRequest.Unmarshal(m, b)
}
func (m *ListRoutesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRoutesRequest.Marshal(b, m, deterministic)
}
func (dst *ListRoutesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRoutesRequest.Merge(dst, src)
}
func (m *ListRoutesRequest) XXX_Size() int {
	return xxx_messageInfo_ListRoutesRequest.Size(m)
}
func (m *ListRoutesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRoutesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRoutesRequest proto.InternalMessageInfo

func (m *ListRoutesRequest) GetStakeholderId() int64 {
	if m != nil {
		return m.StakeholderId
	}
	return 0
}

func (m *ListRoutesRequest) GetPageNumber() int32 {
	if m != nil {
		return m.PageNumber
	}
	return 0
}

func (m *ListRoutesRequest) GetResultPerPage() int32 {
	if m != nil {
		return m.ResultPerPage
	}
	return 0
}

type ListRoutesResponse struct {
	Routes               []*Route `protobuf:"bytes,1,rep,name=routes,proto3" json:"routes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRoutesResponse) Reset()         { *m = ListRoutesResponse{} }
func (m *ListRoutesResponse) String() string { return proto.CompactTextString(m) }
func (*ListRoutesResponse) ProtoMessage()    {}
func (*ListRoutesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_route_d515e77e8e526776, []int{2}
}
func (m *ListRoutesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRoutesResponse.Unmarshal(m, b)
}
func (m *ListRoutesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRoutesResponse.Marshal(b, m, deterministic)
}
func (dst *ListRoutesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRoutesResponse.Merge(dst, src)
}
func (m *ListRoutesResponse) XXX_Size() int {
	return xxx_messageInfo_ListRoutesResponse.Size(m)
}
func (m *ListRoutesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRoutesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListRoutesResponse proto.InternalMessageInfo

func (m *ListRoutesResponse) GetRoutes() []*Route {
	if m != nil {
		return m.Routes
	}
	return nil
}

type Route struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CreateTime           string   `protobuf:"bytes,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Route) Reset()         { *m = Route{} }
func (m *Route) String() string { return proto.CompactTextString(m) }
func (*Route) ProtoMessage()    {}
func (*Route) Descriptor() ([]byte, []int) {
	return fileDescriptor_route_d515e77e8e526776, []int{3}
}
func (m *Route) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Route.Unmarshal(m, b)
}
func (m *Route) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Route.Marshal(b, m, deterministic)
}
func (dst *Route) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Route.Merge(dst, src)
}
func (m *Route) XXX_Size() int {
	return xxx_messageInfo_Route.Size(m)
}
func (m *Route) XXX_DiscardUnknown() {
	xxx_messageInfo_Route.DiscardUnknown(m)
}

var xxx_messageInfo_Route proto.InternalMessageInfo

func (m *Route) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Route) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Route) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateRouteRequest)(nil), "oswee.route.v1.CreateRouteRequest")
	proto.RegisterType((*ListRoutesRequest)(nil), "oswee.route.v1.ListRoutesRequest")
	proto.RegisterType((*ListRoutesResponse)(nil), "oswee.route.v1.ListRoutesResponse")
	proto.RegisterType((*Route)(nil), "oswee.route.v1.Route")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RouteServiceClient is the client API for RouteService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RouteServiceClient interface {
	ListRoutes(ctx context.Context, in *ListRoutesRequest, opts ...grpc.CallOption) (*ListRoutesResponse, error)
	CreateRoute(ctx context.Context, in *CreateRouteRequest, opts ...grpc.CallOption) (*Route, error)
}

type routeServiceClient struct {
	cc *grpc.ClientConn
}

func NewRouteServiceClient(cc *grpc.ClientConn) RouteServiceClient {
	return &routeServiceClient{cc}
}

func (c *routeServiceClient) ListRoutes(ctx context.Context, in *ListRoutesRequest, opts ...grpc.CallOption) (*ListRoutesResponse, error) {
	out := new(ListRoutesResponse)
	err := c.cc.Invoke(ctx, "/oswee.route.v1.RouteService/ListRoutes", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *routeServiceClient) CreateRoute(ctx context.Context, in *CreateRouteRequest, opts ...grpc.CallOption) (*Route, error) {
	out := new(Route)
	err := c.cc.Invoke(ctx, "/oswee.route.v1.RouteService/CreateRoute", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RouteServiceServer is the server API for RouteService service.
type RouteServiceServer interface {
	ListRoutes(context.Context, *ListRoutesRequest) (*ListRoutesResponse, error)
	CreateRoute(context.Context, *CreateRouteRequest) (*Route, error)
}

func RegisterRouteServiceServer(s *grpc.Server, srv RouteServiceServer) {
	s.RegisterService(&_RouteService_serviceDesc, srv)
}

func _RouteService_ListRoutes_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRoutesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RouteServiceServer).ListRoutes(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/oswee.route.v1.RouteService/ListRoutes",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RouteServiceServer).ListRoutes(ctx, req.(*ListRoutesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RouteService_CreateRoute_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRouteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RouteServiceServer).CreateRoute(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/oswee.route.v1.RouteService/CreateRoute",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RouteServiceServer).CreateRoute(ctx, req.(*CreateRouteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RouteService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "oswee.route.v1.RouteService",
	HandlerType: (*RouteServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListRoutes",
			Handler:    _RouteService_ListRoutes_Handler,
		},
		{
			MethodName: "CreateRoute",
			Handler:    _RouteService_CreateRoute_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "route/v1/route.proto",
}

func init() { proto.RegisterFile("route/v1/route.proto", fileDescriptor_route_d515e77e8e526776) }

var fileDescriptor_route_d515e77e8e526776 = []byte{
	// 334 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x92, 0xc1, 0x4e, 0xf2, 0x40,
	0x10, 0xc7, 0x53, 0xf8, 0x20, 0x61, 0xf8, 0xc0, 0x38, 0xd1, 0xa4, 0xe1, 0x02, 0x34, 0xd1, 0x90,
	0x18, 0xdb, 0x80, 0x4f, 0xa0, 0x5c, 0x34, 0x21, 0x86, 0x14, 0x4f, 0x5e, 0x9a, 0x96, 0x4e, 0x60,
	0x23, 0x65, 0xeb, 0xee, 0x16, 0x1f, 0xc0, 0xe7, 0xf1, 0x1d, 0x4d, 0x67, 0x41, 0x51, 0xd4, 0xdb,
	0xe6, 0xb7, 0xff, 0x9d, 0xfc, 0x76, 0x66, 0xe0, 0x44, 0xc9, 0xc2, 0x50, 0xb0, 0x19, 0x06, 0x7c,
	0xf0, 0x73, 0x25, 0x8d, 0xc4, 0xb6, 0xd4, 0x2f, 0x44, 0xbe, 0x45, 0x9b, 0xa1, 0x77, 0x0d, 0x38,
	0x56, 0x14, 0x1b, 0x0a, 0x4b, 0x12, 0xd2, 0x73, 0x41, 0xda, 0xe0, 0x05, 0xd4, 0x38, 0xe1, 0x3a,
	0x3d, 0x67, 0xd0, 0x1c, 0x9d, 0xfa, 0x5f, 0x5f, 0xf9, 0x36, 0x6c, 0x33, 0xde, 0xab, 0x03, 0xc7,
	0x13, 0xa1, 0x0d, 0x43, 0xbd, 0x2b, 0x71, 0x06, 0x6d, 0x6d, 0xe2, 0x27, 0x5a, 0xca, 0x55, 0x4a,
	0x2a, 0x12, 0x29, 0xd7, 0xaa, 0x86, 0xad, 0x3d, 0x7a, 0x97, 0x62, 0x17, 0x9a, 0x79, 0xbc, 0xa0,
	0x68, 0x5d, 0x64, 0x09, 0x29, 0xb7, 0xd2, 0x73, 0x06, 0xb5, 0x10, 0x4a, 0x74, 0xcf, 0x04, 0xcf,
	0xe1, 0x48, 0x91, 0x2e, 0x56, 0x26, 0xca, 0x49, 0x45, 0xe5, 0x85, 0x5b, 0xe5, 0x50, 0xcb, 0xe2,
	0x29, 0xa9, 0x69, 0xbc, 0x20, 0x6f, 0x0c, 0xb8, 0x2f, 0xa1, 0x73, 0xb9, 0xd6, 0x84, 0x97, 0x50,
	0x67, 0x49, 0xed, 0x3a, 0xbd, 0xea, 0xef, 0x3f, 0xd9, 0x86, 0xbc, 0x09, 0xd4, 0x18, 0x60, 0x1b,
	0x2a, 0x1f, 0xc6, 0x15, 0x91, 0x22, 0xc2, 0xbf, 0x75, 0x9c, 0x11, 0xfb, 0x35, 0x42, 0x3e, 0x97,
	0xea, 0x73, 0x6e, 0x5d, 0x64, 0x44, 0x66, 0xad, 0x1a, 0x21, 0x58, 0xf4, 0x20, 0x32, 0x1a, 0xbd,
	0x39, 0xf0, 0x9f, 0xcb, 0xcd, 0x48, 0x6d, 0xc4, 0x9c, 0x70, 0x06, 0xf0, 0xe9, 0x88, 0xfd, 0xef,
	0x2e, 0x07, 0x4d, 0xec, 0x78, 0x7f, 0x45, 0xb6, 0x5f, 0xbc, 0x85, 0xe6, 0xde, 0x04, 0xf1, 0xe0,
	0xc9, 0xe1, 0x78, 0x3b, 0x3f, 0x77, 0xe1, 0xa6, 0xff, 0xd8, 0x5d, 0x08, 0xb3, 0x2c, 0x12, 0x7f,
	0x2e, 0xb3, 0x80, 0x23, 0x81, 0x36, 0x45, 0xa2, 0x83, 0xdd, 0x2a, 0x25, 0x75, 0xde, 0xa2, 0xab,
	0xf7, 0x00, 0x00, 0x00, 0xff, 0xff, 0xb0, 0x3d, 0x32, 0x04, 0x5d, 0x02, 0x00, 0x00,
}
