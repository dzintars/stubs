// Code generated by protoc-gen-go. DO NOT EDIT.
// source: message/v1/message.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreateMessageRequest struct {
	Message              *Message `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateMessageRequest) Reset()         { *m = CreateMessageRequest{} }
func (m *CreateMessageRequest) String() string { return proto.CompactTextString(m) }
func (*CreateMessageRequest) ProtoMessage()    {}
func (*CreateMessageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_23c6e0f241cfaeec, []int{0}
}

func (m *CreateMessageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateMessageRequest.Unmarshal(m, b)
}
func (m *CreateMessageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateMessageRequest.Marshal(b, m, deterministic)
}
func (m *CreateMessageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateMessageRequest.Merge(m, src)
}
func (m *CreateMessageRequest) XXX_Size() int {
	return xxx_messageInfo_CreateMessageRequest.Size(m)
}
func (m *CreateMessageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateMessageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateMessageRequest proto.InternalMessageInfo

func (m *CreateMessageRequest) GetMessage() *Message {
	if m != nil {
		return m.Message
	}
	return nil
}

type ListMessagesRequest struct {
	StakeholderId        int64    `protobuf:"varint,1,opt,name=stakeholder_id,json=stakeholderId,proto3" json:"stakeholder_id,omitempty"`
	PageNumber           int32    `protobuf:"varint,2,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	ResultPerPage        int32    `protobuf:"varint,3,opt,name=result_per_page,json=resultPerPage,proto3" json:"result_per_page,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListMessagesRequest) Reset()         { *m = ListMessagesRequest{} }
func (m *ListMessagesRequest) String() string { return proto.CompactTextString(m) }
func (*ListMessagesRequest) ProtoMessage()    {}
func (*ListMessagesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_23c6e0f241cfaeec, []int{1}
}

func (m *ListMessagesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListMessagesRequest.Unmarshal(m, b)
}
func (m *ListMessagesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListMessagesRequest.Marshal(b, m, deterministic)
}
func (m *ListMessagesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMessagesRequest.Merge(m, src)
}
func (m *ListMessagesRequest) XXX_Size() int {
	return xxx_messageInfo_ListMessagesRequest.Size(m)
}
func (m *ListMessagesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMessagesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListMessagesRequest proto.InternalMessageInfo

func (m *ListMessagesRequest) GetStakeholderId() int64 {
	if m != nil {
		return m.StakeholderId
	}
	return 0
}

func (m *ListMessagesRequest) GetPageNumber() int32 {
	if m != nil {
		return m.PageNumber
	}
	return 0
}

func (m *ListMessagesRequest) GetResultPerPage() int32 {
	if m != nil {
		return m.ResultPerPage
	}
	return 0
}

type ListMessagesResponse struct {
	Messages             []*Message `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ListMessagesResponse) Reset()         { *m = ListMessagesResponse{} }
func (m *ListMessagesResponse) String() string { return proto.CompactTextString(m) }
func (*ListMessagesResponse) ProtoMessage()    {}
func (*ListMessagesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_23c6e0f241cfaeec, []int{2}
}

func (m *ListMessagesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListMessagesResponse.Unmarshal(m, b)
}
func (m *ListMessagesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListMessagesResponse.Marshal(b, m, deterministic)
}
func (m *ListMessagesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListMessagesResponse.Merge(m, src)
}
func (m *ListMessagesResponse) XXX_Size() int {
	return xxx_messageInfo_ListMessagesResponse.Size(m)
}
func (m *ListMessagesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListMessagesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListMessagesResponse proto.InternalMessageInfo

func (m *ListMessagesResponse) GetMessages() []*Message {
	if m != nil {
		return m.Messages
	}
	return nil
}

type Message struct {
	Uuid                 string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Kind                 int64    `protobuf:"varint,2,opt,name=kind,proto3" json:"kind,omitempty"`
	SendersName          string   `protobuf:"bytes,3,opt,name=senders_name,json=sendersName,proto3" json:"senders_name,omitempty"`
	Subject              string   `protobuf:"bytes,4,opt,name=subject,proto3" json:"subject,omitempty"`
	Body                 string   `protobuf:"bytes,5,opt,name=body,proto3" json:"body,omitempty"`
	CreateTime           string   `protobuf:"bytes,8,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_23c6e0f241cfaeec, []int{3}
}

func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (m *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(m, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *Message) GetKind() int64 {
	if m != nil {
		return m.Kind
	}
	return 0
}

func (m *Message) GetSendersName() string {
	if m != nil {
		return m.SendersName
	}
	return ""
}

func (m *Message) GetSubject() string {
	if m != nil {
		return m.Subject
	}
	return ""
}

func (m *Message) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func (m *Message) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateMessageRequest)(nil), "oswee.message.v1.CreateMessageRequest")
	proto.RegisterType((*ListMessagesRequest)(nil), "oswee.message.v1.ListMessagesRequest")
	proto.RegisterType((*ListMessagesResponse)(nil), "oswee.message.v1.ListMessagesResponse")
	proto.RegisterType((*Message)(nil), "oswee.message.v1.Message")
}

func init() { proto.RegisterFile("message/v1/message.proto", fileDescriptor_23c6e0f241cfaeec) }

var fileDescriptor_23c6e0f241cfaeec = []byte{
	// 403 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0xdd, 0x8e, 0xd2, 0x40,
	0x14, 0xc7, 0x53, 0xbb, 0x2b, 0xbb, 0x87, 0x45, 0xcd, 0xec, 0x9a, 0x8c, 0x7b, 0x23, 0x8b, 0x59,
	0xc2, 0x55, 0x1b, 0x20, 0xbe, 0x80, 0x5c, 0x19, 0x85, 0x60, 0xf5, 0xca, 0xc4, 0x34, 0xfd, 0x38,
	0x81, 0x0a, 0xd3, 0xa9, 0x73, 0x66, 0x30, 0x3c, 0x80, 0x4f, 0xe2, 0x8b, 0x9a, 0x4e, 0xa7, 0x0a,
	0x8a, 0x7a, 0x77, 0xfa, 0x3b, 0xff, 0x9e, 0xf9, 0x9f, 0x0f, 0xe0, 0x02, 0x89, 0x92, 0x15, 0x86,
	0xbb, 0x71, 0xe8, 0xc2, 0xa0, 0x52, 0x52, 0x4b, 0xf6, 0x44, 0xd2, 0x57, 0xc4, 0xa0, 0x85, 0xbb,
	0xf1, 0xe0, 0x0d, 0xdc, 0xcc, 0x14, 0x26, 0x1a, 0xe7, 0x0d, 0x8b, 0xf0, 0x8b, 0x41, 0xd2, 0x6c,
	0x0a, 0x1d, 0xa7, 0xe2, 0x5e, 0xdf, 0x1b, 0x75, 0x27, 0xcf, 0x82, 0xdf, 0xff, 0x0d, 0xda, 0x5f,
	0x5a, 0xe5, 0xe0, 0x9b, 0x07, 0xd7, 0x6f, 0x0b, 0xd2, 0x2e, 0x41, 0x6d, 0xb1, 0x7b, 0x78, 0x44,
	0x3a, 0xd9, 0xe0, 0x5a, 0x6e, 0x73, 0x54, 0x71, 0x91, 0xdb, 0x9a, 0x7e, 0xd4, 0x3b, 0xa0, 0xaf,
	0x73, 0xf6, 0x1c, 0xba, 0x55, 0xb2, 0xc2, 0xb8, 0x34, 0x22, 0x45, 0xc5, 0x1f, 0xf4, 0xbd, 0xd1,
	0x79, 0x04, 0x35, 0x5a, 0x58, 0xc2, 0x86, 0xf0, 0x58, 0x21, 0x99, 0xad, 0x8e, 0x2b, 0x54, 0x71,
	0x9d, 0xe0, 0xbe, 0x15, 0xf5, 0x1a, 0xbc, 0x44, 0xb5, 0xac, 0x7d, 0xcc, 0xe1, 0xe6, 0xd8, 0x06,
	0x55, 0xb2, 0x24, 0x64, 0x2f, 0xe1, 0xc2, 0x59, 0x25, 0xee, 0xf5, 0xfd, 0x7f, 0x77, 0xf5, 0x53,
	0x3a, 0xf8, 0xee, 0x41, 0xc7, 0x51, 0xc6, 0xe0, 0xcc, 0x18, 0xd7, 0xc0, 0x65, 0x64, 0xe3, 0x9a,
	0x6d, 0x8a, 0x32, 0xb7, 0x86, 0xfd, 0xc8, 0xc6, 0xec, 0x0e, 0xae, 0x08, 0xcb, 0x1c, 0x15, 0xc5,
	0x65, 0x22, 0x1a, 0x9f, 0x97, 0x51, 0xd7, 0xb1, 0x45, 0x22, 0x90, 0x71, 0xe8, 0x90, 0x49, 0x3f,
	0x63, 0xa6, 0xf9, 0x99, 0xcd, 0xb6, 0x9f, 0x75, 0xc1, 0x54, 0xe6, 0x7b, 0x7e, 0xde, 0x3c, 0x52,
	0xc7, 0xf5, 0x70, 0x32, 0xbb, 0xa8, 0x58, 0x17, 0x02, 0xf9, 0x85, 0x4d, 0x41, 0x83, 0x3e, 0x14,
	0x02, 0x27, 0x1a, 0xae, 0x9d, 0xc9, 0x77, 0x06, 0xd5, 0xfe, 0x3d, 0xaa, 0x5d, 0x91, 0x21, 0xfb,
	0x04, 0x57, 0x87, 0xb3, 0x60, 0xf7, 0x7f, 0x76, 0x7c, 0x62, 0x65, 0xb7, 0xc3, 0xff, 0xc9, 0x9a,
	0x91, 0x4e, 0x36, 0xf0, 0xd4, 0xb1, 0x99, 0x14, 0x22, 0x29, 0xf3, 0xf6, 0xdd, 0x08, 0x7a, 0x47,
	0x87, 0xc5, 0x4e, 0x54, 0x3c, 0x75, 0x79, 0xb7, 0x7f, 0x5f, 0xc9, 0xab, 0x17, 0x1f, 0xef, 0x56,
	0x85, 0x5e, 0x9b, 0x34, 0xc8, 0xa4, 0x08, 0xad, 0x2c, 0x24, 0x6d, 0x52, 0x0a, 0x7f, 0x5d, 0x7c,
	0xfa, 0xd0, 0x9e, 0xfa, 0xf4, 0x47, 0x00, 0x00, 0x00, 0xff, 0xff, 0x4c, 0x32, 0xda, 0xfe, 0x06,
	0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MessageQueryServiceClient is the client API for MessageQueryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MessageQueryServiceClient interface {
	ListMessages(ctx context.Context, in *ListMessagesRequest, opts ...grpc.CallOption) (*ListMessagesResponse, error)
}

type messageQueryServiceClient struct {
	cc *grpc.ClientConn
}

func NewMessageQueryServiceClient(cc *grpc.ClientConn) MessageQueryServiceClient {
	return &messageQueryServiceClient{cc}
}

func (c *messageQueryServiceClient) ListMessages(ctx context.Context, in *ListMessagesRequest, opts ...grpc.CallOption) (*ListMessagesResponse, error) {
	out := new(ListMessagesResponse)
	err := c.cc.Invoke(ctx, "/oswee.message.v1.MessageQueryService/ListMessages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MessageQueryServiceServer is the server API for MessageQueryService service.
type MessageQueryServiceServer interface {
	ListMessages(context.Context, *ListMessagesRequest) (*ListMessagesResponse, error)
}

func RegisterMessageQueryServiceServer(s *grpc.Server, srv MessageQueryServiceServer) {
	s.RegisterService(&_MessageQueryService_serviceDesc, srv)
}

func _MessageQueryService_ListMessages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListMessagesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessageQueryServiceServer).ListMessages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/oswee.message.v1.MessageQueryService/ListMessages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessageQueryServiceServer).ListMessages(ctx, req.(*ListMessagesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MessageQueryService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "oswee.message.v1.MessageQueryService",
	HandlerType: (*MessageQueryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListMessages",
			Handler:    _MessageQueryService_ListMessages_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "message/v1/message.proto",
}

// MessageCommandServiceClient is the client API for MessageCommandService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MessageCommandServiceClient interface {
	CreateMessage(ctx context.Context, in *CreateMessageRequest, opts ...grpc.CallOption) (*Message, error)
}

type messageCommandServiceClient struct {
	cc *grpc.ClientConn
}

func NewMessageCommandServiceClient(cc *grpc.ClientConn) MessageCommandServiceClient {
	return &messageCommandServiceClient{cc}
}

func (c *messageCommandServiceClient) CreateMessage(ctx context.Context, in *CreateMessageRequest, opts ...grpc.CallOption) (*Message, error) {
	out := new(Message)
	err := c.cc.Invoke(ctx, "/oswee.message.v1.MessageCommandService/CreateMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MessageCommandServiceServer is the server API for MessageCommandService service.
type MessageCommandServiceServer interface {
	CreateMessage(context.Context, *CreateMessageRequest) (*Message, error)
}

func RegisterMessageCommandServiceServer(s *grpc.Server, srv MessageCommandServiceServer) {
	s.RegisterService(&_MessageCommandService_serviceDesc, srv)
}

func _MessageCommandService_CreateMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMessageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MessageCommandServiceServer).CreateMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/oswee.message.v1.MessageCommandService/CreateMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MessageCommandServiceServer).CreateMessage(ctx, req.(*CreateMessageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MessageCommandService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "oswee.message.v1.MessageCommandService",
	HandlerType: (*MessageCommandServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateMessage",
			Handler:    _MessageCommandService_CreateMessage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "message/v1/message.proto",
}
